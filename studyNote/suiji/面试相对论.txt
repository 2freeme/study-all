评价
	定位问题：
			1、首先定位接口
			2、接着定位到最近的日志，根据线程去接着向下找。
			3、对于一般常见的问题：比如接口对接的问题。设计到多个系统的对接，最容易出错（譬如物流，他们的架构就是分为内部系统和对外系统
			    内部的话其实出错的话是和外部解耦的，内部推送外部系统。外部系统会有调度一直的执行推送，很容易搞炸，死对手不死贫道。
				（幂等和最大程度的校验））
				还有就是在外围系统中，我们推送了，但是接口超时了，我们本地的事务回滚了，但是其实在那边是成功的。这种的话只能功能上去实现。
				只能通过mq去解耦，先推送过去，然后再让他们推送回来。
				
				但是你也懂得，一旦涉及到多个系统，如果是刚开始没考虑好的，是不可能的做的很完美的
				
	业务能力和解耦：
			1、系统层面的话是 DDD的设计，针对于单每一个都会有自己的领域方法， 比如简单的物流取消的。每一个都是自己的领域的方法。只是每一个领域方法中
			    根据不同的类型进行区分。但是这些都是这个领域的方法的内部的区别
			     